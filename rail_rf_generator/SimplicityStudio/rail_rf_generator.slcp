# Silicon Labs Project Configuration Tools: slcp, v0, Component selection file.
project_name: rail_rf_generator
label: RAIL Proprietary - RF Generator
package: Rail

description: >
 This project shows the implementation of a simple CLI (Command Line Interface)-controlled RF Generator, which is able to send user-defined packet sequences.

category: Proprietary RAIL Examples
quality: experimental

filter:
- name: Device Type
  value: [SoC]
- name: Project Difficulty
  value: [Beginner]
- name: Wireless Technology
  value: [RAIL]

readme:
- {path: ../README.md}

source:
- {path: ../src/main.c}
- {path: ../src/app_init.c}
- {path: ../src/app_process.c}
- {path: ../src/app_cli.c}
- {path: ../src/script_ci.c}

include:
- path: '../inc'
  file_list:
  - {path: app_init.h}
  - {path: app_process.h}

toolchain_settings:
- {value: debug, option: optimize}

component:
- {id: app_log}
- {id: app_assert}
- {id: radio_config_simple_rail_singlephy}
- {id: sl_system}
- {id: iostream_retarget_stdio}
- {id: silabs_core_response_print}
- instance: [btn0]
  id: simple_button
- instance: [led1]
  id: simple_led
- instance: [inst]
  id: cli
- {id: cli_delay}
- instance: [inst0]
  id: cli_storage_ram
- {id: mpu}
- instance: [inst0]
  id: rail_util_init
- {id: device_init}
- id: iostream_recommended_stream
- {id: rail_util_recommended}

template_contribution:
- name: cli_command
  value:
    name: setPayload
    handler: cli_set_payload
    help: "Set the packet's payload bytes for future transmits"
    argument:
    - type: uint8
      help: "packetID"
    - type: uint16
      help: "offset"
    - type: uint8opt
      help: "byte0 byte1 ..."
- name: cli_command
  value:
    name: getPayload
    handler: cli_get_payload
    help: "Print the packet's payload data and byte length"
    argument:
    - type: uint8
      help: "packetID"
- name: cli_command
  value:
    name: setLength
    handler: cli_set_length
    help: "Set the packet's length"
    argument:
    - type: uint8
      help: "packetID"
    - type: uint16
      help: "length"
- name: cli_command
  value:
    name: setChannel
    handler: cli_set_channel
    help: "Set the packet's Tx channel"
    argument:
    - type: uint8
      help: "packetID"
    - type: uint16
      help: "channel"
- name: cli_command
  value:
    name: getPacketInfo
    handler: cli_get_packet_info
    help: "Print packet's info"
    argument:
    - type: uint8
      help: "packetID"
- name: cli_command
  value:
    name: setSeq
    handler: cli_set_seq
    help: "Set the Tx sequence"
    argument:
    - type: uint32opt
      help: "packetID0 delayUs0 payketID1 delayUs1"
- name: cli_command
  value:
    name: getSeq
    handler: cli_get_seq
    help: "Print the current Tx sequence"
- name: cli_command
  value:
    name: setRepeat
    handler: cli_set_repeat
    help: "Set sequence repeat time. 0 means infinite repeat time"
    argument:
    - type: uint32
      help: "repeat"
- name: cli_command
  value:
    name: getRepeat
    handler: cli_get_repeat
    help: "Print sequence repeat time"
- name: cli_command
  value:
    name: tx
    handler: cli_tx
    help: "Start/Stop sequence Tx"
- name: cli_command
  value:
    name: txLog
    handler: cli_tx_log
    help: "Enable Tx printing messages"
    argument:
    - type: uint8opt
      help: "0=Disable [1=Enable]"
- name: cli_command
  value:
    name: enterScript
    handler: enterScript
    help: "Enter script entry mode. Conclude entry mode with text 'endScript'.."
    argument:
    - type: uint8opt
      help: "[0=RAM] 1=Flash-script will run on boot"
- name: cli_command
  value:
    name: printScript
    handler: printScript
    help: "Print the script entered via enterScript"
    argument:
    - type: uint8opt
      help: "[0=RAM] 1=Flash"
- name: cli_command
  value:
    name: clearScript
    handler: clearScript
    help: "Clear the script entered via enterScript"
    argument:
    - type: uint8opt
      help: "[0=RAM] 1=Flash"
- name: cli_command
  value:
    name: runScript
    handler: runScript
    help: "Run the script entered via enterScript"
    argument:
    - type: uint8opt
      help: "[0=RAM] 1=Flash-script will run on boot"
- name: cli_command
  value:
    name: wait
    handler: wait
    help: "Suspend processing of CLI input for a while"
    argument:
    - type: uint32
      help: "waitTimeUs"
    - type: stringopt
      help: "[''rel''=Relative] ''abs''=Absolute"

config_file:
  - path: ../config/sl_rail_rf_generator_config.h

requires:
- {name: simple_led}
- {name: simple_button}
- {name: a_radio_config}
- condition: [kernel]
  name: sl_simple_rail_os
- condition: [hardware_board_has_eff]
  name: rail_util_eff
- condition: [device_family_fgm23]
  name: radio_config_singlephy_device_family_fgm23

configuration:
- {name: SL_STACK_SIZE, value: '2048'}
- {name: SL_HEAP_SIZE, value: '2048'}
- {name: configMINIMAL_STACK_SIZE, value: '1024'}
- {name: CPU_CFG_TS_32_EN, value: '1'}
- {name: OS_CFG_DBG_EN, value: '1'}
- {name: OS_CFG_TS_EN, value: '1'}
- {name: OS_CFG_SCHED_ROUND_ROBIN_EN, value: '1'}
- {name: OS_CFG_STAT_TASK_EN, value: '1'}
- {name: OS_CFG_TASK_PROFILE_EN, value: '1'}
- {name: SL_IOSTREAM_EUSART_VCOM_FLOW_CONTROL_TYPE, value: SL_IOSTREAM_EUSART_UART_FLOW_CTRL_NONE}
# Config default - proprietary config
- {name: SL_RAIL_UTIL_INIT_INIT_COMPLETE_CALLBACK_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_BLE_SUPPORT_INST0_ENABLE, value: '0'}
- {name: SL_RAIL_UTIL_INIT_RADIO_CONFIG_SUPPORT_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_PROTOCOLS_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_PROTOCOL_INST0_DEFAULT, value: SL_RAIL_UTIL_PROTOCOL_PROPRIETARY}
- {name: SL_RAIL_UTIL_INIT_CALIBRATIONS_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_CALIBRATION_TEMPERATURE_NOTIFY_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_CALIBRATION_ONETIME_NOTIFY_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_DATA_FORMATS_INST0_ENABLE, value: '1'}
# Config required events
- {name: SL_RAIL_UTIL_INIT_EVENTS_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_TX_PACKET_SENT_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_TX_ABORTED_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_TX_FIFO_UNDERFLOW_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_TX_CHANNEL_BUSY_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_RX_TX_SCHEDULED_RX_TX_STARTED_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_TX_SCHEDULED_TX_MISSED_INST0_ENABLE, value: '1'}
- {name: SL_RAIL_UTIL_INIT_EVENT_CAL_NEEDED_INST0_ENABLE, value: '1'}
# Config required auto state transitions
- {name: SL_RAIL_UTIL_INIT_TRANSITION_INST0_TX_SUCCESS, value: RAIL_RF_STATE_IDLE}
- {name: SL_RAIL_UTIL_INIT_TRANSITION_INST0_TX_ERROR, value: RAIL_RF_STATE_IDLE}
- {name: SL_RAIL_UTIL_INIT_TRANSITION_INST0_RX_SUCCESS, value: RAIL_RF_STATE_IDLE}
- {name: SL_RAIL_UTIL_INIT_TRANSITION_INST0_RX_ERROR, value: RAIL_RF_STATE_IDLE}
- {name: SL_RAIL_UTIL_INIT_TRANSITIONS_INST0_ENABLE, value: '1'}
- {name: SL_BOARD_ENABLE_VCOM, value: '1'}
# cli command storage
- name: SL_CLI_STORAGE_RAM_INST0_END_STRING
  value: '"endScript"'
- name: SL_CLI_STORAGE_RAM_INST0_CLI_HANDLE
  value: "sl_cli_inst_handle"
- name: SL_CLI_STORAGE_NVM3_INST0_END_STRING
  value: '"endScript"'
- name: SL_CLI_STORAGE_NVM3_INST0_CLI_HANDLE
  value: "sl_cli_inst_handle"
# Misc. config
- condition: [hardware_board_has_eff]
  name: SL_RAIL_UTIL_PA_SELECTION_SUBGHZ
  value: RAIL_TX_POWER_MODE_SUBGIG_EFF_25DBM
- condition: [hardware_board_has_eff]
  name: SL_RAIL_UTIL_PA_SELECTION_OFDM
  value: RAIL_TX_POWER_MODE_OFDM_PA_EFF_25DBM
- condition: [hardware_board_has_eff]
  name: SL_RAIL_UTIL_PA_CALIBRATION_ENABLE
  value: '1'
- condition: [device_sdid_220, hardware_board_default_rf_band_470]
  name: SL_DEVICE_INIT_RFFPLL_BAND
  value: '1'
- condition: [device_sdid_220, hardware_board_default_rf_band_450]
  name: SL_DEVICE_INIT_RFFPLL_BAND
  value: '0'

ui_hints:
  highlight:
  - {path: config/rail/radio_settings.radioconf}
